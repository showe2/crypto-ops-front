export const escapeCSV=(v:any)=>{if(v==null)return"";const s=String(v).replace(/\r?\n/g," ");return /[",]/.test(s)?'"'+s.replace(/"/g,'""')+'"':s;};
export const toCSV=(rows:any[])=>{if(!rows?.length)return"";const h=Object.keys(rows[0]);const L=[h.join(",")];for(const r of rows)L.push(h.map((k)=>escapeCSV((r as any)[k])).join(","));return L.join("\n");};
export function splitCSVLine(line:string){const o:string[]=[];let c=\"\",q=false;for(let i=0;i<line.length;i++){const ch=line[i];if(q){if(ch==='\"'){if(line[i+1]==='\"'){c+='\"';i++;}else q=false;}else c+=ch;}else{if(ch==='\"')q=true;else if(ch===','){o.push(c);c=\"\";}else c+=ch;}}o.push(c);return o;}
export const parseCSV=(t:string)=>{const ls=t.trim().split(/\r?\n/);if(!ls.length)return[];const H=splitCSVLine(ls[0]).map(s=>s.trim());const out:any[]=[];for(let i=1;i<ls.length;i++){const ln=ls[i];if(!ln.trim())continue;const cols=splitCSVLine(ln);const o:any={};H.forEach((h,j)=>o[h]=(cols[j]??"").trim());out.push(o);}return out;};